{"version":3,"sources":["../../src/stylus.js"],"names":[],"mappings":";;;;;;sBAAmB,QAAQ;;;;sBACR,QAAQ;;;;wBACN,WAAW;;;;;;;;;;;AAShC,SAAS,QAAQ,CAAC,EAAE,EAAE;AACpB,SAAO,oBAAO,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;CACvC;;;;;;;;;;AAUD,SAAS,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE;;;;AAI5B,MAAM,UAAU,GAAG,oBAAO,MAAM,EAAE,MAAM,CAAC,CAAC;;;;AAI1C,sBAAO,IAAI,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC,EAAE,UAAS,MAAM,EAAE;AACzD,QAAI,MAAM,CAAC,MAAM,CAAC,EAAE;AAClB,0BAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;KACvE;GACF,CAAC,CAAC;;AAEH,YAAU,UAAO,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC;;AAE9C,SAAO,UAAU,CAAC;CACnB;;;;;;;;;;qBASc,UAAS,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE;AACpD,MAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CACvB,MAAM,CAAC,UAAS,GAAG,EAAE,aAAa,EAAE;AACnC,QAAI,GAAG,EAAE;AACP,YAAM,GAAG,CAAC;KACX;;AAED,YAAQ,CAAC,2BAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC;GACvD,CAAC,CAAC;CACJ","file":"stylus.js","sourcesContent":["import stylus from 'stylus';\nimport lodash from 'lodash';\nimport CleanCSS from 'clean-css';\n\n/**\n * Arrayify.\n *\n * @param  {Array|String|Object} it\n *\n * @return {Bool}\n */\nfunction arrayify(it) {\n  return lodash.isArray(it) ? it : [it];\n}\n\n/**\n * Setup for Stylus.\n *\n * @param  {String} string\n * @param  {Object} config\n *\n * @return {Stylus}\n */\nfunction styl(string, config) {\n  // First through the whole config at stylus,\n  // it should ignore stuff it cannot handle\n  // like use/import/include etc?\n  const thisStylus = stylus(string, config);\n\n  // Enumerate over the config options that the\n  // stylus API only makes available by methods\n  lodash.each(['use', 'import', 'include'], function(option) {\n    if (config[option]) {\n      lodash.each(arrayify(config[option]), thisStylus[option], thisStylus);\n    }\n  });\n\n  thisStylus.import(__dirname + '/stylus/unit');\n\n  return thisStylus;\n}\n\n/**\n * Render styl files.\n *\n * @param  {String}   stylusCode\n * @param  {Object}   config\n * @param  {Function} callback\n */\nexport default function(stylusCode, config, callback) {\n  styl(stylusCode, config)\n  .render(function(err, cssFromStylus) {\n    if (err) {\n      throw err;\n    }\n\n    callback(new CleanCSS().minify(cssFromStylus).styles);\n  });\n}\n"]}