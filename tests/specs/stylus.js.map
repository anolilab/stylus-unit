{"version":3,"sources":["../../src/stylus.js"],"names":[],"mappings":";;;;;;kBAwDe,UAAS,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE;AACpD,MAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CACvB,MAAM,CAAC,UAAS,GAAG,EAAE,aAAa,EAAE;AACnC,QAAI,GAAG,EAAE;AACP,YAAM,GAAG,CAAC;KACX;;AAED,YAAQ,CAAC,wBAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC;GACvD,CAAC,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;AAtDD,SAAS,QAAQ,CAAC,EAAE,EAAE;AACpB,SAAO,iBAAO,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;CACvC;;;;;;;;;;AAAA,AAUD,SAAS,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE;;;;AAI5B,MAAM,UAAU,GAAG,sBAAO,MAAM,EAAE,MAAM,CAAC;;;;AAAC,AAI1C,mBAAO,IAAI,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC,EAAE,UAAS,MAAM,EAAE;AACzD,QAAI,MAAM,CAAC,MAAM,CAAC,EAAE;AAClB,uBAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;KACvE;GACF,CAAC,CAAC;;AAEH,YAAU,CAAC,MAAM,CAAC,SAAS,GAAG,cAAc,CAAC;;;AAAC,AAG9C,MAAI,MAAM,CAAC,MAAM,EAAE;AACjB,qBAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE;AAC5C,gBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC7B,CAAC,CAAC;GACJ;;AAED,SAAO,UAAU,CAAC;CACnB;;;;;;;;;AAAA","file":"stylus.js","sourcesContent":["import stylus from 'stylus';\r\nimport lodash from 'lodash';\r\nimport CleanCSS from 'clean-css';\r\n\r\n/**\r\n * Arrayify.\r\n *\r\n * @param  {Array|String|Object} it\r\n *\r\n * @return {Bool}\r\n */\r\nfunction arrayify(it) {\r\n  return lodash.isArray(it) ? it : [it];\r\n}\r\n\r\n/**\r\n * Setup for Stylus.\r\n *\r\n * @param  {String} string\r\n * @param  {Object} config\r\n *\r\n * @return {Stylus}\r\n */\r\nfunction styl(string, config) {\r\n  // First through the whole config at stylus,\r\n  // it should ignore stuff it cannot handle\r\n  // like use/import/include etc?\r\n  const thisStylus = stylus(string, config);\r\n\r\n  // Enumerate over the config options that the\r\n  // stylus API only makes available by methods\r\n  lodash.each(['use', 'import', 'include'], function(option) {\r\n    if (config[option]) {\r\n      lodash.each(arrayify(config[option]), thisStylus[option], thisStylus);\r\n    }\r\n  });\r\n\r\n  thisStylus.import(__dirname + '/stylus/unit');\r\n\r\n  // Allow to define global variables/functions from JS\r\n  if (config.define) {\r\n    lodash.each(config.define, function(val, key) {\r\n      thisStylus.define(key, val);\r\n    });\r\n  }\r\n\r\n  return thisStylus;\r\n}\r\n\r\n/**\r\n * Render styl files.\r\n *\r\n * @param  {String}   stylusCode\r\n * @param  {Object}   config\r\n * @param  {Function} callback\r\n */\r\nexport default function(stylusCode, config, callback) {\r\n  styl(stylusCode, config)\r\n  .render(function(err, cssFromStylus) {\r\n    if (err) {\r\n      throw err;\r\n    }\r\n\r\n    callback(new CleanCSS().minify(cssFromStylus).styles);\r\n  });\r\n}\r\n"]}