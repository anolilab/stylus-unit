{"version":3,"sources":["../../src/runner.js"],"names":[],"mappings":";;;;;;;sBAAmB,QAAQ;;;;oBACV,MAAM;;;;qBACmB,SAAS;;sBACY,UAAU;;;;oBAGlD,MAAM;;;;AAGtB,SAAS,gBAAgB,CAAC,UAAU,EAAE,QAAQ,EAAE;AACrD,MAAM,0BAA0B,GAAG,+BACjC,oBAAa,UAAU,CAAC,CACzB,CAAC;AACF,MAAM,OAAO,GAAG,oBAAO,OAAO,CAAC,0BAA0B,CAAC,CAAC;;AAE3D,sBAAO,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;CAChC;;;;;;;;;;AAUD,SAAS,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE;AACrC,MAAM,SAAS,GAAG,oBAAO,MAAM,CAC7B,kBAAK,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,YAAY,CAAC,qBAE7C,CAAC;;AAEF,sBAAO,IAAI,CACT,oBAAO,OAAO,CACZ,oBAAO,GAAG,CAAC,SAAS,mCAA2B,CAChD,EACD,QAAQ,CACT,CAAC;CACH;;;;;;;;;;qBASc,UAAS,MAAM,EAAE;AAC9B,aAAW,CAAC,MAAM,EAAE,UAAS,WAAW,EAAE;;AAExC,YAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,YAAW;AACrC,sBAAgB,CAAC,WAAW,CAAC,UAAU,EAAE,UAAS,IAAI,EAAE;AACtD,UAAE,CAAC,IAAI,CAAC,SAAS,EAAE,YAAW;AAC5B,cAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAClB,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ","file":"runner.js","sourcesContent":["import lodash from 'lodash';\nimport glob from 'glob';\nimport { isEmptyFile, trimNewlines } from './utils';\nimport {extractTestsFromString, getDescriptionsFromFiles} from './parser';\n\n/* eslint-disable */ /* jshint ignore:start */\nimport { should } from 'chai';\n/* jshint ignore:end */ /* eslint-enable */\n\nexport function forEachAssertion(assertions, callback) {\n  const mapAssertionFromAssertions = extractTestsFromString(\n    trimNewlines(assertions)\n  );\n  const flatten = lodash.flatten(mapAssertionFromAssertions);\n\n  lodash.each(flatten, callback);\n}\n\n/**\n * Search for all tests.\n *\n * @param  {Array}    config\n * @param  {Function} callback\n *\n * @return {[type]}\n */\nfunction forEachTest(config, callback) {\n  const testFiles = lodash.reject(\n    glob.sync(config.testDirPath + '/**/*.styl'),\n    isEmptyFile\n  );\n\n  lodash.each(\n    lodash.flatten(\n      lodash.map(testFiles, getDescriptionsFromFiles)\n    ),\n    callback\n  );\n}\n\n/**\n * Run stylus tests by mocha.\n *\n * @param  {Array} config\n *\n * @return {[type]}\n */\nexport default function(config) {\n  forEachTest(config, function(description) {\n    // sets up describe\n    describe(description.title, function() {\n      forEachAssertion(description.assertions, function(test) {\n        it(test.assertion, function() {\n          test.run(config);\n        });\n      });\n    });\n  });\n}\n"]}