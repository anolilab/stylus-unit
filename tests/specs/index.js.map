{"version":3,"sources":["../../src/index.js"],"names":[],"mappings":";;;;;;kBA6Be,UAAS,YAAY,EAAE;;;;;;AAMpC,MAAM,aAAa,GAAG;AACpB,YAAQ,EAAE,yBAAyB,EAAE;AACrC,eAAW,EAAE,SAAS;AACtB,UAAM,EAAE;AACN,cAAQ,EAAE,IAAI;KACf;AACD,SAAK,EAAE;AACL,cAAQ,EAAE,MAAM;KACjB;GACF;;;;AAAC,AAIF,MAAI,CAAC,MAAM,GAAG,iBAAO,KAAK,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;;AAExD,sBAAU,MAAM,CAAC,KAAK,CAAC,CACtB,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,CAC9B,GAAG,CAAC,UAAS,QAAQ,EAAE;AACtB,WAAO,CAAC,EAAE,CAAC,MAAM,EAAE,YAAW;AAC5B,aAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACxB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;AA7CD,SAAS,yBAAyB,GAAG;AACnC,MAAI,WAAW,YAAA,CAAC;;AAEhB,MAAI;AACF,eAAW,GAAG,IAAI,CAAC,KAAK,CAAC,aAAG,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;GAClE,CAAC,OAAO,GAAG,EAAE;AACZ,eAAW,GAAG,EAAE,CAAC;GAClB;;AAED,SAAO,WAAW,CAAC;CACpB;;;;;;;AAAA","file":"index.js","sourcesContent":["import Mocha from 'mocha';\r\nimport fs from 'fs';\r\nimport lodash from 'lodash';\r\n\r\n/**\r\n * Get description from package.json.\r\n *\r\n * @summary  Read the users npm package name property to provide a name for\r\n *           the test suite's initial 'describe'\r\n *\r\n *  @returns  <String>  '' || 'some-package-name'\r\n */\r\nfunction getDefaultTestDescription() {\r\n  let packageName;\r\n\r\n  try {\r\n    packageName = JSON.parse(fs.readFileSync('./package.json')).name;\r\n  } catch (err) {\r\n    packageName = '';\r\n  }\r\n\r\n  return packageName;\r\n}\r\n\r\n/**\r\n * Run Mocha with stylus runner.\r\n *\r\n * @param customConfig:\r\n */\r\nexport default function(customConfig) {\r\n  // describe    <String>  Title used by Mocha top-level describe function\r\n  // testDirPath <String>  the path where your styl tests are\r\n  // stylus      <Object>  stylus config\r\n  // mocha       <Object>  mocha config\r\n\r\n  const defaultConfig = {\r\n    describe: getDefaultTestDescription(),\r\n    testDirPath: './tests',\r\n    stylus: {\r\n      compress: true,\r\n    },\r\n    mocha: {\r\n      reporter: 'spec',\r\n    },\r\n  };\r\n\r\n  // global config will be used by runner\r\n  // for configing stylus compiler and test description / suite path\r\n  root.config = lodash.merge(defaultConfig, customConfig);\r\n\r\n  new Mocha(config.mocha)\r\n  .addFile(__dirname + '/runner')\r\n  .run(function(failures) {\r\n    process.on('exit', function() {\r\n      process.exit(failures);\r\n    });\r\n  });\r\n}\r\n"]}