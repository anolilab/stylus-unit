{"version":3,"sources":["../../src/parser.js"],"names":[],"mappings":";;;;;;kBAAe,IAAI;;;;wBACE,WAAW;;;;sBACb,QAAQ;;;;qBACW,SAAS;;AAE/C,SAAS,OAAO,CAAC,QAAQ,EAAE;AACzB,MAAM,YAAY,GAAG,oBAAa,gBAAG,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;;AAErE,SAAO,YAAY,CAAC;CACrB;;AAED,SAAS,qBAAqB,CAAC,UAAU,EAAE;AACzC,MAAI,IAAI,GAAG,UAAU,CAAC;;AAEtB,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,GAAG,qBAAc,CAAC;AACjE,MAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;AAE9B,SAAO;AACL,eAAW,EAAE,WAAW;AACxB,eAAW,EAAE,YAAY,CAAC,CAAC,CAAC;AAC5B,eAAW,EAAE,sBAAS,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;GAC/C,CAAC;CACH;;AAED,SAAS,sBAAsB,CAAC,MAAM,EAAE;;;AAGtC,SAAO,oBAAO,GAAG,CACf,oBAAO,MAAM,CACX,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,iBAEzB,EACD,qBAAqB,CACtB,CAAC;CACH;;qBAEc,UAAS,IAAI,EAAE;AAC5B,SAAO,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;CAC9C","file":"parser.js","sourcesContent":["import fs from 'fs';\r\nimport cleanCSS from 'clean-css';\r\nimport lodash from 'lodash';\r\nimport { trimNewlines, isEmpty } from './utils';\r\n\r\nfunction getFile(filePath) {\r\n  const fileContents = trimNewlines(fs.readFileSync(filePath, 'utf8'));\r\n\r\n  return fileContents;\r\n}\r\n\r\nfunction extractTestFromString(testString) {\r\n  let test = testString;\r\n\r\n  const description = test.match(/.*/)[0];\r\n  const stylusAndCss = test.split(/.*@expect.*/).map(trimNewlines);\r\n  test = test.replace(/.*/, '');\r\n\r\n  return {\r\n    description: description,\r\n    givenStylus: stylusAndCss[0],\r\n    expectedCss: cleanCSS.process(stylusAndCss[1]),\r\n  };\r\n}\r\n\r\nfunction extractTestsFromString(string) {\r\n  //  Filter empty strings out, it seems that the\r\n  //  @it line leaves an empty string entry behind in the array\r\n  return lodash.map(\r\n    lodash.reject(\r\n      string.split(/.*@it\\s?/),\r\n      isEmpty\r\n    ),\r\n    extractTestFromString\r\n  );\r\n}\r\n\r\nexport default function(file) {\r\n  return extractTestsFromString(getFile(file));\r\n}\r\n"]}